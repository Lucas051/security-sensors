package com.mycompany.JTreeSensors.presentacion.interfaz;

import com.mycompany.JTreeSensors.dominio.Alarma;
import com.mycompany.JTreeSensors.dominio.AlarmaService;
import com.mycompany.JTreeSensors.dominio.Dispositivo;
import com.mycompany.JTreeSensors.dominio.EventoAlarma;
import com.mycompany.JTreeSensors.dominio.ModeloArbol;
import com.mycompany.JTreeSensors.dominio.Red;
import com.mycompany.JTreeSensors.dominio.Sensor;
import com.mycompany.JTreeSensors.dominio.TipoSensor;
import com.mycompany.JTreeSensors.presentacion.controllers.IUVentana;
import com.mycompany.JTreeSensors.presentacion.controllers.VentanaController;
import java.awt.Color;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetAdapter;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.event.InputEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JComponent;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;
import javax.swing.TransferHandler;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.MutableTreeNode;

public class VentanaPrincipal extends javax.swing.JFrame implements IUVentana, Transferable {

    private VentanaController controller = null;

    private ModeloArbol modelo;

    public VentanaPrincipal() {
        super();
        initComponents();

        arbol.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);

        arbol.setModel(modelo);
        arbol.setCellRenderer(new ArbolCellRenderer());

        // Configura el TransferHandler para el JTree
        arbol.setDragEnabled(true);
        arbol.setTransferHandler(new TreeTransferHandler());
        arbol.setDropTarget(new DropTarget(arbol, DnDConstants.ACTION_MOVE, new DropTargetAdapter() {
            @Override
            public void drop(DropTargetDropEvent dtde) {
                dtde.dropComplete(true);
                actualizarListadoDispositivos((Dispositivo) modelo.getRoot());
            }

        }));

        lblFeedbackSensores.setVisible(false);
        lblFeedbackAlarmas.setVisible(false);
        lblFeedbackRedes.setVisible(false);
        lblFeedbackListado.setVisible(false);

    }

    public void setController(VentanaController controller) {
        this.controller = controller;
        controller.actualizarListaDeAlarmas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelRed = new javax.swing.JPanel();
        txtNombreRed = new javax.swing.JTextField();
        btnAceptarRed = new javax.swing.JButton();
        lblNombre = new javax.swing.JLabel();
        btnEliminarRed = new javax.swing.JButton();
        btnEditarRed = new javax.swing.JButton();
        lblFeedbackRedes = new javax.swing.JLabel();
        jPanelListado = new javax.swing.JPanel();
        lblDispositivos = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listAlarmasSensor = new javax.swing.JList<>();
        lblFeedbackListado = new javax.swing.JLabel();
        jPanelAlarma = new javax.swing.JPanel();
        lblNombreAlarma = new javax.swing.JLabel();
        txtNombreAlarma = new javax.swing.JTextField();
        lblTipo1 = new javax.swing.JLabel();
        cbTipoSensorAlarma = new javax.swing.JComboBox<>();
        lblUmbral = new javax.swing.JLabel();
        txtUmbralAlarma = new javax.swing.JTextField();
        btnAgregarAlarma = new javax.swing.JButton();
        btnEliminarAlarma = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listAlarmas = new javax.swing.JList<>();
        lblFeedbackAlarmas = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstEventoAlarma = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jPanelSensor = new javax.swing.JPanel();
        lblTipo = new javax.swing.JLabel();
        cbTipoSensor = new javax.swing.JComboBox<>();
        lblValorActual = new javax.swing.JLabel();
        lblLatitud = new javax.swing.JLabel();
        lblLongitud = new javax.swing.JLabel();
        txtValorActual = new javax.swing.JTextField();
        txtLatitud = new javax.swing.JTextField();
        txtLongitud = new javax.swing.JTextField();
        cbxActivo = new javax.swing.JCheckBox();
        btnAgregarSensor = new javax.swing.JButton();
        btnEditarSensor = new javax.swing.JButton();
        btnEliminarSensor = new javax.swing.JButton();
        txtNombreSensor = new javax.swing.JTextField();
        lblNombre1 = new javax.swing.JLabel();
        lblFeedbackSensores = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        arbol = new javax.swing.JTree();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(153, 153, 153));

        btnAceptarRed.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnAceptarRed.setText("Aceptar");
        btnAceptarRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarRedActionPerformed(evt);
            }
        });

        lblNombre.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblNombre.setText("Nombre");

        btnEliminarRed.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnEliminarRed.setText("Eliminar");
        btnEliminarRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarRedActionPerformed(evt);
            }
        });

        btnEditarRed.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnEditarRed.setText("Editar");
        btnEditarRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarRedActionPerformed(evt);
            }
        });

        lblFeedbackRedes.setText("jLabel2");

        javax.swing.GroupLayout jPanelRedLayout = new javax.swing.GroupLayout(jPanelRed);
        jPanelRed.setLayout(jPanelRedLayout);
        jPanelRedLayout.setHorizontalGroup(
            jPanelRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRedLayout.createSequentialGroup()
                .addGroup(jPanelRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRedLayout.createSequentialGroup()
                        .addGroup(jPanelRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelRedLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombreRed, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelRedLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(jPanelRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnEliminarRed, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEditarRed, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAceptarRed, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 291, Short.MAX_VALUE))
                    .addComponent(lblFeedbackRedes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelRedLayout.setVerticalGroup(
            jPanelRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRedLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreRed, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFeedbackRedes)
                .addGap(7, 7, 7)
                .addComponent(btnAceptarRed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditarRed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarRed)
                .addContainerGap(493, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Gestión de redes", jPanelRed);

        lblDispositivos.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblDispositivos.setText("Listado de alarmas del sensor seleccionado");

        jScrollPane4.setViewportView(listAlarmasSensor);

        lblFeedbackListado.setText("jLabel2");

        javax.swing.GroupLayout jPanelListadoLayout = new javax.swing.GroupLayout(jPanelListado);
        jPanelListado.setLayout(jPanelListadoLayout);
        jPanelListadoLayout.setHorizontalGroup(
            jPanelListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelListadoLayout.createSequentialGroup()
                        .addComponent(lblFeedbackListado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(190, 190, 190))
                    .addGroup(jPanelListadoLayout.createSequentialGroup()
                        .addGroup(jPanelListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelListadoLayout.createSequentialGroup()
                                .addComponent(lblDispositivos, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 151, Short.MAX_VALUE))
                            .addComponent(jScrollPane4))
                        .addContainerGap())))
        );
        jPanelListadoLayout.setVerticalGroup(
            jPanelListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListadoLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblDispositivos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFeedbackListado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Listado alarmas por sensor", jPanelListado);

        lblNombreAlarma.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblNombreAlarma.setText("Nombre");

        txtNombreAlarma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreAlarmaActionPerformed(evt);
            }
        });

        lblTipo1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblTipo1.setText("Tipo");

        lblUmbral.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblUmbral.setText("Umbral");

        btnAgregarAlarma.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnAgregarAlarma.setText("Agregar");
        btnAgregarAlarma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarAlarmaActionPerformed(evt);
            }
        });

        btnEliminarAlarma.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnEliminarAlarma.setText("Eliminar");
        btnEliminarAlarma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAlarmaActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(listAlarmas);

        lblFeedbackAlarmas.setText("jLabel2");

        javax.swing.GroupLayout jPanelAlarmaLayout = new javax.swing.GroupLayout(jPanelAlarma);
        jPanelAlarma.setLayout(jPanelAlarmaLayout);
        jPanelAlarmaLayout.setHorizontalGroup(
            jPanelAlarmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlarmaLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelAlarmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanelAlarmaLayout.createSequentialGroup()
                        .addGroup(jPanelAlarmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombreAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminarAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUmbralAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUmbral, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbTipoSensorAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTipo1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 285, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanelAlarmaLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblFeedbackAlarmas, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelAlarmaLayout.setVerticalGroup(
            jPanelAlarmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAlarmaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblNombreAlarma)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTipo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbTipoSensorAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblUmbral)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUmbralAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAgregarAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFeedbackAlarmas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(234, 234, 234))
        );

        jTabbedPane1.addTab("Gestión de alarmas", jPanelAlarma);

        jScrollPane2.setViewportView(lstEventoAlarma);

        jLabel1.setText("Registro de alarmas activadas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Listado Evento Alarma", jPanel1);

        lblTipo.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblTipo.setText("Tipo");

        lblValorActual.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblValorActual.setText("Valor Actual");

        lblLatitud.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblLatitud.setText("Latitud");

        lblLongitud.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblLongitud.setText("Longitud");

        cbxActivo.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        cbxActivo.setText("Activo");

        btnAgregarSensor.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnAgregarSensor.setText("Agregar");
        btnAgregarSensor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarSensorActionPerformed(evt);
            }
        });

        btnEditarSensor.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnEditarSensor.setText("Editar");
        btnEditarSensor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarSensorActionPerformed(evt);
            }
        });

        btnEliminarSensor.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnEliminarSensor.setText("Eliminar");
        btnEliminarSensor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarSensorActionPerformed(evt);
            }
        });

        lblNombre1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblNombre1.setText("Nombre");

        lblFeedbackSensores.setText("jLabel2");

        javax.swing.GroupLayout jPanelSensorLayout = new javax.swing.GroupLayout(jPanelSensor);
        jPanelSensor.setLayout(jPanelSensorLayout);
        jPanelSensorLayout.setHorizontalGroup(
            jPanelSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSensorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSensorLayout.createSequentialGroup()
                        .addGroup(jPanelSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValorActual, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLongitud, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLatitud, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblValorActual, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLongitud, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbTipoSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLatitud, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelSensorLayout.createSequentialGroup()
                        .addComponent(cbxActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSensorLayout.createSequentialGroup()
                        .addComponent(lblFeedbackSensores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(26, 26, 26))))
            .addGroup(jPanelSensorLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnAgregarSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditarSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 78, Short.MAX_VALUE))
        );
        jPanelSensorLayout.setVerticalGroup(
            jPanelSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSensorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbTipoSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLatitud)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLatitud, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLongitud)
                .addGap(12, 12, 12)
                .addComponent(txtLongitud, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblValorActual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtValorActual, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxActivo)
                .addGap(5, 5, 5)
                .addComponent(lblFeedbackSensores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditarSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Gestión de sensores", jPanelSensor);

        arbol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtreeMouseClicked(evt);
            }
        });
        arbol.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                arbolValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(arbol);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        llenarComboBox();
    }//GEN-LAST:event_formWindowOpened

    private void jtreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtreeMouseClicked

    }//GEN-LAST:event_jtreeMouseClicked

    private void btnEliminarSensorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarSensorActionPerformed
        try {
            controller.eliminarSensor();
            lblFeedbackSensores.setVisible(false);
        } catch (RuntimeException e) {
            lblFeedbackSensores.setText(e.getMessage());
            lblFeedbackSensores.setForeground(Color.red);
        }

    }//GEN-LAST:event_btnEliminarSensorActionPerformed

    private void btnEditarSensorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarSensorActionPerformed
        try {
            controller.editarSensor();

            lblFeedbackSensores.setText("Sensor editado con éxito");
            lblFeedbackSensores.setForeground(Color.green);
        } catch (NumberFormatException e) {
            //error valor txt
            lblFeedbackSensores.setText("Valor numerico invalido en uno de los campos");
            lblFeedbackSensores.setForeground(Color.red);
        } catch (RuntimeException e) {
            //error sensor seleccionado
            lblFeedbackSensores.setText(e.getMessage());
            lblFeedbackSensores.setForeground(Color.red);
        }

    }//GEN-LAST:event_btnEditarSensorActionPerformed

    private void btnAgregarSensorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarSensorActionPerformed
        controller.agregarSimple();
        limpiarFormularioSensores();
    }//GEN-LAST:event_btnAgregarSensorActionPerformed

    private void btnEliminarAlarmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAlarmaActionPerformed
        controller.eliminarAlarma();
    }//GEN-LAST:event_btnEliminarAlarmaActionPerformed

    private void btnAgregarAlarmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarAlarmaActionPerformed
        try {
            controller.agregarAlarma();
            limpiarFormularioAlarma();
            lblFeedbackAlarmas.setText("alarma agregada correctamente");
            lblFeedbackAlarmas.setForeground(Color.green);
        } catch (RuntimeException e) {
            lblFeedbackAlarmas.setText(e.getMessage());
            lblFeedbackAlarmas.setForeground(Color.red);
            lblFeedbackAlarmas.setVisible(true);
        }
    }//GEN-LAST:event_btnAgregarAlarmaActionPerformed

    private void txtNombreAlarmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreAlarmaActionPerformed

    }//GEN-LAST:event_txtNombreAlarmaActionPerformed

    private void btnEditarRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarRedActionPerformed
        controller.editarNombreDispositivo(txtNombreRed.getText());
    }//GEN-LAST:event_btnEditarRedActionPerformed

    private void btnEliminarRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarRedActionPerformed
        try {
            controller.eliminarRed();
            lblFeedbackRedes.setVisible(false);

        } catch (RuntimeException e) {
            lblFeedbackRedes.setText(e.getMessage());
            lblFeedbackRedes.setForeground(Color.red);
            lblFeedbackAlarmas.setVisible(true);
        }
    }//GEN-LAST:event_btnEliminarRedActionPerformed

    private void btnAceptarRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarRedActionPerformed
        controller.agregarCompuesto();
        limpiarFormularioRed();
    }//GEN-LAST:event_btnAceptarRedActionPerformed

    private void arbolValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_arbolValueChanged
        controller.manejarDispositivoSeleccionado();

        try {
            limpiarListaAlarmasPorSensor();
            controller.actualizarListaAlarmasPorSensor();
            lblFeedbackListado.setVisible(false);
        } catch (ClassCastException e) {
            lblFeedbackListado.setText("Debe seleccionar un sensor");
            lblFeedbackListado.setForeground(Color.red);
            lblFeedbackListado.setVisible(true);
        }
    }//GEN-LAST:event_arbolValueChanged

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    private void llenarComboBox() {
        for (TipoSensor tipo : TipoSensor.values()) {
            cbTipoSensor.addItem(tipo.getSensor());
            cbTipoSensorAlarma.addItem(tipo.getSensor());

        }
    }

    private void limpiarFormularioRed() {
        txtNombreRed.setText("");
    }

    private void limpiarFormularioSensores() {
        cbTipoSensor.setSelectedIndex(0);
        txtLatitud.setText("");
        txtLongitud.setText("");
        txtValorActual.setText("");
        cbxActivo.setSelected(false);
        txtNombreSensor.setText("");
    }

    private void limpiarFormularioAlarma() {
        cbTipoSensorAlarma.setSelectedIndex(0);
        txtNombreAlarma.setText("");
        txtUmbralAlarma.setText("");

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree arbol;
    private javax.swing.JButton btnAceptarRed;
    private javax.swing.JButton btnAgregarAlarma;
    private javax.swing.JButton btnAgregarSensor;
    private javax.swing.JButton btnEditarRed;
    private javax.swing.JButton btnEditarSensor;
    private javax.swing.JButton btnEliminarAlarma;
    private javax.swing.JButton btnEliminarRed;
    private javax.swing.JButton btnEliminarSensor;
    private javax.swing.JComboBox<String> cbTipoSensor;
    private javax.swing.JComboBox<Object> cbTipoSensorAlarma;
    private javax.swing.JCheckBox cbxActivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelAlarma;
    private javax.swing.JPanel jPanelListado;
    private javax.swing.JPanel jPanelRed;
    private javax.swing.JPanel jPanelSensor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblDispositivos;
    private javax.swing.JLabel lblFeedbackAlarmas;
    private javax.swing.JLabel lblFeedbackListado;
    private javax.swing.JLabel lblFeedbackRedes;
    private javax.swing.JLabel lblFeedbackSensores;
    private javax.swing.JLabel lblLatitud;
    private javax.swing.JLabel lblLongitud;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombre1;
    private javax.swing.JLabel lblNombreAlarma;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblTipo1;
    private javax.swing.JLabel lblUmbral;
    private javax.swing.JLabel lblValorActual;
    private javax.swing.JList<Object> listAlarmas;
    private javax.swing.JList<Object> listAlarmasSensor;
    private javax.swing.JList<Object> lstEventoAlarma;
    private javax.swing.JTextField txtLatitud;
    private javax.swing.JTextField txtLongitud;
    private javax.swing.JTextField txtNombreAlarma;
    private javax.swing.JTextField txtNombreRed;
    private javax.swing.JTextField txtNombreSensor;
    private javax.swing.JTextField txtUmbralAlarma;
    private javax.swing.JTextField txtValorActual;
    // End of variables declaration//GEN-END:variables

    @Override
    public void listarEventoAlarma(ArrayList<EventoAlarma> eventos) {
        lstEventoAlarma.setListData(eventos.toArray());
    }

    @Override
    public String obtenerTipoSensor() {
        String a = cbTipoSensor.getSelectedItem().toString();

        System.out.println(a);

        return cbTipoSensor.getSelectedItem().toString();
    }

    @Override
    public double obtenerLatitud() {
        return Double.parseDouble(txtLatitud.getText());
    }

    @Override
    public double obtenerLongitud() {
        return Double.parseDouble(txtLongitud.getText());
    }

    @Override
    public double obtenerValorActual() {
        return Double.parseDouble(txtValorActual.getText());
    }

    @Override
    public boolean obtenerActivo() {
        return cbxActivo.isSelected();
    }

    @Override
    public String obtenerNombreRed() {
        return txtNombreRed.getText();
    }

    @Override
    public JTree obtenerArbol() {
        return arbol;
    }

    @Override
    public ModeloArbol obtenerModeloArbol() {
        return modelo;
    }

    @Override
    public void actualizarListadoDispositivos(Dispositivo raiz) {
        modelo = new ModeloArbol(raiz);
        arbol.setModel(modelo);
        System.out.println("actualizado");

    }

    @Override
    public String obtenerTipoSensorAlarma() {
        return cbTipoSensorAlarma.getSelectedItem().toString();

    }

    @Override
    public String obtenerNombreAlarma() {
        return txtNombreAlarma.getText();
    }

    @Override
    public String obtenerNombreSensor() {
        return txtNombreSensor.getText();
    }

    @Override
    public double obtenerUmbral() {
        return Double.parseDouble(txtUmbralAlarma.getText());
    }

    @Override
    public void listarAlarmas(ArrayList<Alarma> alarmas) {
        listAlarmas.setListData(alarmas.toArray());
    }

    @Override
    public void listarAlarmasPorSensor(ArrayList<Alarma> alarmas) {
        listAlarmasSensor.setListData(alarmas.toArray());
    }

    private void limpiarListaAlarmasPorSensor() {
        listAlarmasSensor.setListData(new Sensor[0]);
    }

    //setear valores del seleccionado en los campos del formulario
    @Override
    public void setearNombreRed(String nombreRed) {
        txtNombreRed.setText(nombreRed);
    }

    @Override
    public void setearNombreSensor(String nombreSensor) {
        txtNombreSensor.setText(nombreSensor);
    }

    @Override
    public void setearTipoSensor(String tipoSensor) {
        cbTipoSensor.setSelectedItem(tipoSensor);
    }

    @Override
    public void setearLatitud(String latitud) {
        txtLatitud.setText(latitud);

    }

    @Override
    public void setearLongitud(String longitud) {
        txtLongitud.setText(longitud);

    }

    @Override
    public void setearValorActual(String valorActual) {
        txtValorActual.setText(valorActual);

    }

    @Override
    public void setearActivo(Boolean activo) {
        cbxActivo.setSelected(activo);
    }

    /////////////////////////////////////////////////////////////////////
    private class TreeTransferHandler extends TransferHandler {

        @Override
        public int getSourceActions(javax.swing.JComponent c) {
            return TransferHandler.MOVE;
        }

        @Override
        protected Transferable createTransferable(javax.swing.JComponent c) {
            javax.swing.JTree tree = (javax.swing.JTree) c;
            javax.swing.tree.TreePath[] paths = tree.getSelectionPaths();
            StringBuilder data = new StringBuilder();

            for (javax.swing.tree.TreePath path : paths) {
                data.append(path.getLastPathComponent().toString()).append("\n");
            }

            return new java.awt.datatransfer.StringSelection(data.toString());
        }

        @Override
        protected void exportDone(javax.swing.JComponent source, Transferable data, int action) {
            System.out.println("exportDone: " + action);
            actualizarListadoDispositivos((Dispositivo) modelo.getRoot());

        }

        @Override
        public void exportAsDrag(JComponent comp, InputEvent e, int action) {
            System.out.println("exportAsDrag: " + action);
            super.exportAsDrag(comp, e, action);
        }

        @Override
        public boolean canImport(javax.swing.TransferHandler.TransferSupport support) {
            return support.isDataFlavorSupported(java.awt.datatransfer.DataFlavor.stringFlavor);
        }

        @Override
        public boolean importData(javax.swing.TransferHandler.TransferSupport support) {
            if (!canImport(support)) {
                return false;
            }

            javax.swing.JTree.DropLocation dl = (javax.swing.JTree.DropLocation) support.getDropLocation();
            javax.swing.tree.TreePath destPath = dl.getPath();

            try {
                String data = (String) support.getTransferable().getTransferData(java.awt.datatransfer.DataFlavor.stringFlavor);
                String[] lines = data.split("\n");

                for (String line : lines) {
                    if (!line.isEmpty()) {
                        DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(line);
                        ((DefaultTreeModel) ((JTree) support.getComponent()).getModel()).insertNodeInto(newNode, (MutableTreeNode) destPath.getLastPathComponent(), 0);
                    }
                }

                return true;
            } catch (UnsupportedFlavorException | IOException e) {
                e.printStackTrace();
                return false;
            }
        }
    }

    private void imprimirModelo(DefaultTreeModel treeModel) {
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) treeModel.getRoot();
        imprimirNodos(root, 0);
    }

    private void imprimirNodos(DefaultMutableTreeNode nodo, int nivel) {
        for (int i = 0; i < nivel; i++) {
            System.out.print("  ");
        }
        System.out.println("- " + nodo.getUserObject());

        for (int i = 0; i < nodo.getChildCount(); i++) {
            imprimirNodos((DefaultMutableTreeNode) nodo.getChildAt(i), nivel + 1);
        }
    }

    @Override
    public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException, IOException {
        // Implementa según sea necesario para tus objetos
        return null;
    }

    @Override
    public DataFlavor[] getTransferDataFlavors() {
        // Implementa según sea necesario para tus objetos
        return new DataFlavor[0];
    }

    @Override
    public boolean isDataFlavorSupported(DataFlavor flavor) {
        // Implementa según sea necesario para tus objetos
        return false;
    }

}
